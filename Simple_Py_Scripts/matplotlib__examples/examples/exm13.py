__author__ = 'ipetrash'


import math

# !!! Импортируем один из пакетов Matplotlib
import pylab

# !!! Импортируем пакет со вспомогательными функциями
from matplotlib__examples import mlab

# Будем рисовать график этой функции
def func(x):
    """
    sinc (x)
    """
    if x == 0:
        return 1.0
    return math.sin(x) / x


if __name__ == '__main__':
    # Интервал изменения переменной по оси X
    xmin = -20.0
    xmax = 20.0

    # Шаг между точками
    dx = 0.2

    # !!! Создадим список координат по оси X на отрезке [-xmin; xmax], включая концы
    xlist = mlab.frange (xmin, xmax, dx)

    # Вычислим значение функции в заданных точках
    ylist = [func (x) for x in xlist]

    # !!! Нарисуем одномерный график с использованием стиля
    pylab.plot(xlist, ylist, "x")

    # Некоторые стили можно комбинировать. Более правильно сказать так: можно указать
    # стиль линии ("--", ":" и т.д.) и стиль маркера ("x", "o" и т.д.)
    # Например, если в предыдущем примере заменить вызов функции plot() на следующую:
    # pylab.plot(xlist, ylist, "x:")
    #
    # Кроме обозначения стиля в строке может содержатсься символ, описывающий цвет
    # графика, но здесь мы ограничены следующими цветами:
    # b - голубой, g - зеленый, r - красный, c - зеленовато-голубой, m - пурпурный,
    # y - желтый, k - черный, w - белый
    # Например, следующая строка кода рисует график черной линией, на которой которую
    # наносятся маркеры в виде звездочек
    # pylab.plot(xlist, ylist, "-*k")

    # !!! Покажем окно с нарисованным графиком
    pylab.show()