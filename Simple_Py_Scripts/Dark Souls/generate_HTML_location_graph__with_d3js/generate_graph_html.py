#!/usr/bin/env python3
# -*- coding: utf-8 -*-

__author__ = 'ipetrash'


from typing import List, Tuple


def get_dataset_text(links: List[Tuple[str, str]]) -> str:
    # Список всех узлов графа
    nodes = set()
    for a, b in links:
        nodes.add(a)
        nodes.add(b)

    # Задаем отсортированный порядок узлов
    nodes = sorted(nodes)

    # Список ребер
    edges = list()

    for a, b in links:
        source = nodes.index(a)
        target = nodes.index(b)

        edges.append({'source': source, 'target': target})

    nodes_dict = [{"name": title} for title in nodes]

    # Пример структуры графа.
    #     nodes -- список узлов
    #     edges -- список ребер, описываются как {source: <индекс узла>, target: <индекс узла>},
    #
    # var dataset = {
    #     nodes: [
    #         {name: "Adam"}, {name: "Bob"}, {name: "Carrie"}, {name: "Donovan"},
    #         {name: "Edward"}, {name: "Felicity"}, {name: "George"},
    #         {name: "Hannah"}, {name: "Iris"}, {name: "Jerry"}
    #     ],
    #     edges: [
    #         {source: 0, target: 1}, {source: 0, target: 2}, {source: 0, target: 3},
    #         {source: 0, target: 4}, {source: 1, target: 5}, {source: 2, target: 5},
    #         {source: 2, target: 5}, {source: 3, target: 4}, {source: 5, target: 8},
    #         {source: 5, target: 9}, {source: 6, target: 7}, {source: 7, target: 8},
    #         {source: 8, target: 9}
    #     ]
    # };
    text = """\
    var dataset = {{
        nodes: {},
        edges: {}
    }};
    """.format(nodes_dict, edges)

    return text


def generate(file_name_to: str, links: List[Tuple[str, str]], title="Graph"):
    template_title = '{{title}}'
    template_dataset = '{{dataset}}'

    dataset_text = get_dataset_text(links)

    with open('template_graph.html', 'r', encoding='utf-8') as f:
        text = f.read()
        text = text.replace(template_title, title)
        text = text.replace(template_dataset, dataset_text)

    with open(file_name_to, 'w', encoding='utf-8') as f:
        f.write(text)


if __name__ == '__main__':
    links = [('Арена Братства Крови', 'Чистилище Нежити'), ('Башня Луны', 'Забытая Крепость'), ('Башня Солнца', 'Железная Цитадель'), ('Безлюдная Пристань', 'Забытая Крепость'), ('Безлюдная Пристань', 'Огненная Башня Хейда'), ('Большой Собор', 'Ледяная Элеум Лойс'), ('Большой Собор', 'Предвечный Хаос'), ('Бухта Брайтстоун-Тселдора', 'Воспоминания Дракона'), ('Бухта Брайтстоун-Тселдора', 'Двери Фарроса'), ('Бухта Брайтстоун-Тселдора', 'Личные Палаты Лорда'), ('Гнездо Дракона', 'Храм Дракона'), ('Гнездо Дракона', 'Цитадель Алдии'), ('Двери Фарроса', 'Темнолесье'), ('Долина Жатвы', 'Земляной Пик'), ('Долина Жатвы', 'Роща Охотника'), ('Железная Цитадель', 'Земляной Пик'), ('Железная Цитадель', 'Мглистая Башня'), ('Железный Проход', 'Мглистая Башня'), ('Забытая Крепость', 'Лес Павших Гигантов'), ('Забытая Крепость', 'Холм Грешников'), ('Замок Дранглик', 'Королевский Проход'), ('Замок Дранглик', 'Трон Желания'), ('Замок Дранглик', 'Храм Зимы'), ('Карта Дранглика', 'Маджула'), ('Королевский Проход', 'Храм Аманы'), ('Ледяная Элеум Лойс', 'Холодные Окраины'), ('Ледяная Элеум Лойс', 'Храм Зимы'), ('Лес Павших Гигантов', 'Маджула'), ('Лес Павших Гигантов', 'Память Ваммара'), ('Лес Павших Гигантов', 'Память Джейта'), ('Лес Павших Гигантов', 'Память Орро'), ('Маджула', 'Междумирье'), ('Маджула', 'Могила Святых'), ('Маджула', 'Огненная Башня Хейда'), ('Маджула', 'Помойка'), ('Маджула', 'Роща Охотника'), ('Маджула', 'Темнолесье'), ('Мглистая Башня', 'Память Старого Железного Короля'), ('Могила Святых', 'Помойка'), ('Огненная Башня Хейда', 'Собор Лазурного Пути'), ('Память Короля', 'Склеп Нежити'), ('Пещера Мертвых', 'Шульва, Священный Город'), ('Помойка', 'Черная Расселина'), ('Роща Охотника', 'Чистилище Нежити'), ('Святилище Дракона', 'Убежище Дракона'), ('Святилище Дракона', 'Шульва, Священный Город'), ('Склеп Нежити', 'Храм Аманы'), ('Темная Бездна Былого', 'Замок Дранглик'), ('Темная Бездна Былого', 'Темные Руины'), ('Темная Бездна Былого', 'Черная Расселина'), ('Темнолесье', 'Храм Зимы'), ('Темнолесье', 'Цитадель Алдии'), ('Черная Расселина', 'Шульва, Священный Город')]
    dataset = get_dataset_text(links)
    print(dataset)

    links = [('Adam', 'Bob'), ('Adam', 'Ivan'), ('Bob', 'Iris'), ('Bob', 'Jerry'), ('Iris', 'George')]
    generate('example.html', links)

    links = [('Сквайр', 'Рыцарь'), ('Сквайр', 'Охотник на ведьм'), ('Охотник на ведьм', 'Инквизитор'), ('Инквизитор', 'Великий инквизитор'), ('Рыцарь', 'Рыцарь Империи'), ('Рыцарь Империи', 'Ангел'), ('Рыцарь Империи', 'Паладин'), ('Паладин', 'Святой мститель'), ('Паладин', 'Защитник веры')]
    generate('example_disciples.html', links, title='Graph Disciples')
